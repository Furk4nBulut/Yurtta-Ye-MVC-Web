@model YurttaYe.Core.Models.ViewModels.MenuViewModel
@{
    ViewData["Title"] = "Menü Sorgula";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="min-h-screen bg-primary">
    <!-- Header -->
    <header class="text-center py-10">
        <h1 class="text-4xl md:text-5xl font-bold text-primary tracking-tight">KYK Yemek Menüsü</h1>
        <p class="text-secondary mt-3 text-lg">Şehir ve tarih seçerek yurt yemek listesini keşfedin.</p>
    </header>

    <!-- Main content -->
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 pb-12">
        <!-- Mobile App Promotion Card -->
        <div class="bg-card rounded-lg shadow-lg p-6 mb-8 border border-card">
            <div class="flex items-center space-x-4 mb-4">
                <i class="fas fa-mobile-alt text-3xl text-accent"></i>
                <div>
                    <h2 class="text-2xl font-bold text-primary">YurttaYe Mobil Uygulaması</h2>
                    <p class="text-secondary">Yemek menüsünü her an, her yerden keşfedin!</p>
                </div>
            </div>
            <div class="flex flex-col sm:flex-row gap-4">
                <a href="https://play.google.com/store/apps/details?id=com.yurttaye.yurttaye" target="_blank" class="btn btn-primary flex-1">
                    <i class="fab fa-google-play mr-2"></i> Google Play'den İndir
                </a>
                <a href="https://play.google.com/apps/testing/com.yurttaye.yurttaye" target="_blank" class="btn btn-outline flex-1">
                    <i class="fas fa-vial mr-2"></i> Test Sürümünü Dene
                </a>
            </div>
            <p class="text-xs text-secondary mt-3">
                Test sürümü deneysel özellikler içerebilir ve kararsız olabilir.
            </p>
        </div>
        
        <!-- Form card -->
        <div class="bg-card rounded-xl shadow-lg p-6 mb-8 border border-card">
            <form asp-action="Index" method="post" class="space-y-6" id="menuForm">
                <!-- City and Date Selection -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label for="CityId" class="block text-sm font-medium text-primary mb-2">Şehir</label>
                        <select asp-for="CityId" id="CityId" class="block w-full rounded-lg border border-border focus:border-accent focus:ring-accent py-3 px-4 bg-secondary text-primary" asp-items="@Model.Cities">
                            <option value="">Şehir Seçin</option>
                        </select>
                        <span asp-validation-for="CityId" class="text-red-500 text-xs mt-1"></span>
                    </div>
                    <div>
                        <label for="Date" class="block text-sm font-medium text-primary mb-2">Tarih</label>
                        <div class="relative">
                            <input type="text" asp-for="Date" id="Date" value="@Model.Date.ToString("yyyy-MM-dd")" class="flatpickr block w-full rounded-lg border border-border focus:border-accent focus:ring-accent py-3 px-4 bg-secondary text-primary" readonly/>
                            <span class="absolute right-4 top-1/2 -translate-y-1/2 text-primary">
                                <i class="fas fa-calendar-alt"></i>
                            </span>
                        </div>
                    </div>
                </div>

                <!-- Hidden Meal Type -->
                <input type="hidden" asp-for="MealType" id="MealType" value="@(Model.MealType ?? "Kahvaltı")"/>

                <!-- Meal Type Toggle -->
                <div class="flex rounded-lg bg-secondary p-1 border border-border">
                    <button type="button" id="breakfastBtn" class="meal-type-btn flex-1 py-2 text-sm font-semibold rounded-md transition-colors" data-meal-type="Kahvaltı">Sabah</button>
                    <button type="button" id="dinnerBtn" class="meal-type-btn flex-1 py-2 text-sm font-semibold rounded-md transition-colors" data-meal-type="Akşam Yemeği">Akşam</button>
                </div>
            </form>
        </div>

        <!-- Error Message -->
        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="bg-error-bg border-l-4 border-error-border text-error-text p-4 rounded-lg mb-8" role="alert" id="errorAlert">
                <div class="flex justify-between items-center">
                    <span><strong>Hata:</strong> @Model.ErrorMessage</span>
                    <button onclick="this.parentElement.parentElement.remove()" class="text-error-text hover:opacity-75">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
        }

        <!-- Menu Display -->
        @if (Model.Menu != null)
        {
            string formattedDate = DateTime.TryParse(Model.Menu.Date, out var parsedDate)
                ? parsedDate.ToString("dd MMMM yyyy, dddd", new System.Globalization.CultureInfo("tr-TR"))
                : string.Empty;

            var mealType = Model.MealType == "Kahvaltı" ? "Sabah Kahvaltısı" : "Akşam Yemeği";
            
            <div class="bg-card rounded-xl shadow-lg overflow-hidden border border-card">
                <div class="p-6 bg-gradient-to-r from-accent to-button-primary-hover text-white">
                    <h2 class="text-2xl font-bold">@mealType</h2>
                    <p class="text-sm opacity-90">@formattedDate - @Model.Cities.FirstOrDefault(c => c.Value == Model.CityId.ToString())?.Text</p>
                </div>
                <div class="p-6 space-y-6">
                    @foreach (var category in Model.Menu.Items.Select(i => i.Category).Distinct())
                    {
                        <div>
                            <h3 class="text-lg font-semibold text-accent mb-3 flex items-center">
                                <i class="fas fa-utensils mr-3"></i>
                                @category
                            </h3>
                            <ul class="space-y-2 pl-8">
                                @foreach (var item in Model.Menu.Items.Where(i => i.Category == category))
                                {
                                    <li class="flex items-center text-primary">
                                        <span>@item.Name</span>
                                        @if (!string.IsNullOrWhiteSpace(item.Gram))
                                        {
                                            <span class="ml-auto text-sm font-medium bg-secondary text-secondary py-1 px-2 rounded-md">@item.Gram</span>
                                        }
                                    </li>
                                }
                            </ul>
                        </div>
                    }

                    <div class="border-t border-border pt-4 text-right">
                        <span class="text-lg font-bold text-primary">Toplam Enerji:</span>
                        <span class="text-lg font-bold text-accent ml-2">@Model.Menu.Energy</span>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://npmcdn.com/flatpickr/dist/l10n/tr.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            flatpickr("#Date", {
                dateFormat: "Y-m-d",
                maxDate: "today",
                locale: "tr",
                onChange: function(selectedDates, dateStr, instance) {
                    document.getElementById("menuForm").submit();
                }
            });

            const mealTypeInput = document.getElementById("MealType");
            const form = document.getElementById("menuForm");
            const mealTypeButtons = document.querySelectorAll('.meal-type-btn');

            function updateButtonStyles() {
                const currentMealType = mealTypeInput.value;
                mealTypeButtons.forEach(btn => {
                    if (btn.dataset.mealType === currentMealType) {
                        btn.classList.add('bg-button-primary', 'text-white');
                        btn.classList.remove('text-primary');
                    } else {
                        btn.classList.remove('bg-button-primary', 'text-white');
                        btn.classList.add('text-primary');
                    }
                });
            }

            mealTypeButtons.forEach(button => {
                button.addEventListener('click', function() {
                    mealTypeInput.value = this.dataset.mealType;
                    updateButtonStyles();
                    form.submit();
                });
            });
            
            document.getElementById('CityId').addEventListener('change', function() {
                form.submit();
            });

            // Initial button styles
            updateButtonStyles();
        });
    </script>
}