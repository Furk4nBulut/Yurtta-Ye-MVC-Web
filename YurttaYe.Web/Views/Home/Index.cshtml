@model YurttaYe.Core.Models.ViewModels.MenuViewModel
@{
    ViewData["Title"] = "Menü Sorgula";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="min-h-screen">
    <!-- Main content -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-12">
        <!-- Mobile App Promotion Card -->
        <div class="bg-card rounded-lg shadow-lg p-6 mb-8 border border-card">
            <div class="flex items-center space-x-4 mb-4">
                <i class="fas fa-mobile-alt text-3xl text-accent"></i>
                <div>
                    <h2 class="text-2xl font-bold text-primary">YurttaYe Mobil Uygulaması</h2>
                    <p class="text-secondary">Yemek menüsünü her an, her yerden keşfedin!</p>
                </div>
            </div>
            <div class="flex flex-col sm:flex-row gap-4">
                <a href="https://play.google.com/store/apps/details?id=com.yurttaye.yurttaye" target="_blank" class="btn btn-primary flex-1">
                    <i class="fab fa-google-play mr-2"></i> Google Play'den İndir
                </a>
                <a href="https://play.google.com/apps/testing/com.yurttaye.yurttaye" target="_blank" class="btn btn-outline flex-1">
                    <i class="fas fa-vial mr-2"></i> Test Sürümünü Dene
                </a>
            </div>
            <p class="text-xs text-secondary mt-3">
                Test sürümü deneysel özellikler içerebilir ve kararsız olabilir.
            </p>
        </div>
        
        <!-- Form -->
        <div class="space-y-4">
            @{
                var selectedDate = Model.Date;
                var culture = new System.Globalization.CultureInfo("tr-TR");
                var firstDayOfMonth = new DateTime(selectedDate.Year, selectedDate.Month, 1);
                var lastDayOfMonth = firstDayOfMonth.AddMonths(1).AddDays(-1);
                var datesToShow = Enumerable.Range(0, lastDayOfMonth.Day)
                    .Select(i => firstDayOfMonth.AddDays(i))
                    .ToList();
            }
            <form asp-action="Index" method="post" class="space-y-4" id="menuForm" data-meal-theme="@(Model.MealType == "Kahvaltı" ? "morning" : "evening")">
                <!-- City Selection -->
                <div>
                    <div x-data="{ open: false }" class="relative">
                        <label for="city-button" class="block text-sm font-medium text-primary mb-2">Şehir</label>
                        <button type="button" @@click="open = !open" class="relative block w-full text-left rounded-lg border border-border focus:border-accent focus:ring-accent py-3 px-4 bg-secondary text-primary">
                            <span>
                                @(Model.Cities.FirstOrDefault(c => c.Value == Model.CityId.ToString())?.Text ?? "Şehir Seçin")
                            </span>
                            <i class="fas fa-chevron-down absolute right-4 top-1/2 -translate-y-1/2 text-primary opacity-75"></i>
                        </button>

                        <div x-show="open" @@click.outside="open = false" x-transition class="absolute z-10 mt-1 w-full bg-card rounded-lg shadow-lg border border-border max-h-60 overflow-y-auto" style="display: none;">
                            <ul class="py-1">
                                @foreach (var city in Model.Cities)
                                {
                                    <li>
                                        <a href="#" @@click.prevent="document.getElementById('CityId').value = '@city.Value'; document.getElementById('menuForm').submit();" class="block px-4 py-2 text-primary hover:bg-gray-200 dark:hover:bg-gray-700 @(city.Value == Model.CityId.ToString() ? "bg-accent text-white" : "")">
                                            @city.Text
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                        
                        <select asp-for="CityId" class="hidden" asp-items="@Model.Cities"></select>
                        <span asp-validation-for="CityId" class="text-red-500 text-xs mt-1"></span>
                    </div>
                </div>

                <!-- New Date Picker -->
                <div>
                    <div class="date-selector">
                        <div class="flex items-center justify-between mb-6">
                            <button type="button" id="prevDateBtn" class="p-2 w-10 h-10 rounded-md bg-card border border-border text-primary hover:bg-secondary transition-colors">
                                <i class="fas fa-chevron-left text-sm"></i>
                            </button>
                            <div class="text-center cursor-pointer" id="date-display-trigger">
                                <p class="text-sm text-secondary">@culture.TextInfo.ToTitleCase(culture.DateTimeFormat.GetDayName(selectedDate.DayOfWeek))</p>
                                <p class="text-xl font-bold text-primary">@selectedDate.ToString("d MMMM yyyy", culture)</p>
                            </div>
                            <button type="button" id="nextDateBtn" class="p-2 w-10 h-10 rounded-md bg-card border border-border text-primary hover:bg-secondary transition-colors">
                                <i class="fas fa-chevron-right text-sm"></i>
                            </button>
                        </div>
                        <div class="flex justify-start space-x-2 overflow-x-auto pb-2 px-2 hide-scrollbar date-strip-container">
                            @foreach (var date in datesToShow)
                            {
                                bool isSelected = date.Date == selectedDate.Date;
                                var dayAbbr = culture.DateTimeFormat.GetAbbreviatedDayName(date.DayOfWeek).ToUpper();
                                <button type="button" class="date-strip-item flex-shrink-0 w-14 h-16 rounded-lg flex flex-col items-center justify-center transition-colors @(isSelected ? "selected shadow" : "")" data-date="@date.ToString("yyyy-MM-dd")">
                                    <span class="text-xs font-semibold opacity-75">@dayAbbr</span>
                                    <span class="text-lg font-bold">@date.Day</span>
                                </button>
                            }
                        </div>
                    </div>
                </div>

                <!-- Hidden Inputs -->
                <input type="hidden" asp-for="Date" id="Date" value="@Model.Date.ToString("yyyy-MM-dd")"/>
                <input type="hidden" asp-for="MealType" id="MealType" value="@(Model.MealType ?? "Kahvaltı")"/>

                <!-- Meal Type Toggle -->
                <div>
                    <label class="block text-sm font-medium text-primary mb-2">Öğün</label>
                    <div class="grid grid-cols-2 gap-4">
                        <button type="button" id="breakfastBtn" class="btn meal-type-btn w-full" data-meal-type="Kahvaltı">Sabah</button>
                        <button type="button" id="dinnerBtn" class="btn meal-type-btn w-full" data-meal-type="Akşam Yemeği">Akşam</button>
                    </div>
                </div>
            </form>
        </div>

        <!-- Error Message -->
        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="bg-error-bg border-l-4 border-error-border text-error-text p-4 rounded-lg mb-8" role="alert" id="errorAlert">
                <div class="flex justify-between items-center">
                    <span><strong>Hata:</strong> @Model.ErrorMessage</span>
                    <button onclick="this.parentElement.parentElement.remove()" class="text-error-text hover:opacity-75">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
        }

        <!-- Menu Display -->
        @if (Model.BreakfastMenu != null || Model.DinnerMenu != null)
        {
            string cityName = Model.Cities.FirstOrDefault(c => c.Value == Model.CityId.ToString())?.Text;
            string formattedDate = Model.Date.ToString("dd MMMM yyyy, dddd", culture);
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-8">
                @if (Model.BreakfastMenu != null)
                {
                    <div class="rounded-xl border border-card bg-card shadow-sm flex flex-col transition-colors">
                        <div class="p-5 border-b border-card rounded-t-xl"
                             style="background: linear-gradient(90deg, #FF8A65 0%, #FFCC02 100%);">
                            <h2 class="text-xl font-bold text-white">
                                <span class="mr-2">🥐</span> Sabah Kahvaltısı
                            </h2>
                            <p class="text-sm text-white/90">@formattedDate - @cityName</p>
                        </div>
                        <div class="p-5 space-y-5 flex-1">
                            @foreach (var category in Model.BreakfastMenu.Items.Select(i => i.Category).Distinct())
                            {
                                <div>
                                    <h3 class="text-base font-semibold flex items-center mb-2"
                                        style="color: var(--breakfast-primary);">
                                        <i class="fas fa-utensils mr-2 opacity-70"></i>
                                        @category
                                    </h3>
                                    <ul class="space-y-1 pl-6">
                                        @foreach (var item in Model.BreakfastMenu.Items.Where(i => i.Category == category))
                                        {
                                            <li class="flex items-center text-primary">
                                                <span>@item.Name</span>
                                                @if (!string.IsNullOrWhiteSpace(item.Gram))
                                                {
                                                    <span class="ml-auto text-xs font-medium bg-secondary text-secondary py-1 px-2 rounded">@item.Gram</span>
                                                }
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }
                        </div>
                        <div class="border-t border-card pt-4 text-center flex items-center justify-center min-h-[56px]">
                            <span class="text-base font-bold text-primary">Toplam Enerji:</span>
                            <span class="text-base font-bold ml-2" style="color: var(--breakfast-primary);">@Model.BreakfastMenu.Energy</span>
                        </div>
                    </div>
                }
                @if (Model.DinnerMenu != null)
                {
                    <div class="rounded-xl border border-card bg-card shadow-sm flex flex-col transition-colors">
                        <div class="p-5 border-b border-card rounded-t-xl"
                             style="background: linear-gradient(90deg, #1E3A8A 0%, #3B82F6 100%);">
                            <h2 class="text-xl font-bold text-white">
                                <span class="mr-2">🍽️</span> Akşam Yemeği
                            </h2>
                            <p class="text-sm text-white/90">@formattedDate - @cityName</p>
                        </div>
                        <div class="p-5 space-y-5 flex-1">
                            @foreach (var category in Model.DinnerMenu.Items.Select(i => i.Category).Distinct())
                            {
                                <div>
                                    <h3 class="text-base font-semibold flex items-center mb-2"
                                        style="color: var(--dinner-primary);">
                                        <i class="fas fa-utensils mr-2 opacity-70"></i>
                                        @category
                                    </h3>
                                    <ul class="space-y-1 pl-6">
                                        @foreach (var item in Model.DinnerMenu.Items.Where(i => i.Category == category))
                                        {
                                            <li class="flex items-center text-primary">
                                                <span>@item.Name</span>
                                                @if (!string.IsNullOrWhiteSpace(item.Gram))
                                                {
                                                    <span class="ml-auto text-xs font-medium bg-secondary text-secondary py-1 px-2 rounded">@item.Gram</span>
                                                }
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }
                        </div>
                        <div class="border-t border-card pt-4 text-center flex items-center justify-center min-h-[56px]">
                            <span class="text-base font-bold text-primary">Toplam Enerji:</span>
                            <span class="text-base font-bold ml-2" style="color: var(--dinner-primary);">@Model.DinnerMenu.Energy</span>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://npmcdn.com/flatpickr/dist/l10n/tr.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById("menuForm");
            const dateInput = document.getElementById("Date");

            // Scroll selected date into view
            const selectedDateElement = document.querySelector('.date-strip-item.selected');
            if (selectedDateElement) {
                selectedDateElement.scrollIntoView({ behavior: 'auto', inline: 'center', block: 'nearest' });
            }

            function submitWithDate(newDateStr) {
                const newDate = new Date(newDateStr);
                const today = new Date();
                
                newDate.setHours(0, 0, 0, 0);
                today.setHours(0, 0, 0, 0);

                if (newDate > today) {
                    return; // Prevent selecting future dates
                }

                dateInput.value = newDateStr;
                form.submit();
            }

            // FLATPICKR KALDIRILDI: Artık takvim açılmayacak

            document.getElementById('prevDateBtn').addEventListener('click', function() {
                const currentDate = new Date(dateInput.value);
                currentDate.setDate(currentDate.getDate() - 1);
                submitWithDate(currentDate.toISOString().split('T')[0]);
            });

            document.getElementById('nextDateBtn').addEventListener('click', function() {
                const currentDate = new Date(dateInput.value);
                currentDate.setDate(currentDate.getDate() + 1);
                submitWithDate(currentDate.toISOString().split('T')[0]);
            });

            // Drag to scroll for date strip
            const dateStrip = document.querySelector('.hide-scrollbar');
            let isDragging = false; 

            if (dateStrip) {
                let isDown = false;
                let startX;
                let scrollLeft;
                
                dateStrip.addEventListener('mousedown', (e) => {
                    isDown = true;
                    isDragging = false; 
                    startX = e.pageX - dateStrip.offsetLeft;
                    scrollLeft = dateStrip.scrollLeft;
                });
                
                dateStrip.addEventListener('mousemove', (e) => {
                    if(!isDown) return;
                    e.preventDefault();
                    isDragging = true;
                    dateStrip.classList.add('grabbing');
                    const x = e.pageX - dateStrip.offsetLeft;
                    const walk = (x - startX) * 2; 
                    dateStrip.scrollLeft = scrollLeft - walk;
                });
                
                window.addEventListener('mouseup', () => {
                    isDown = false;
                    dateStrip.classList.remove('grabbing');
                });
                
                document.querySelectorAll('.date-strip-item').forEach(button => {
                    button.addEventListener('click', function(e) {
                        if (isDragging) {
                            e.preventDefault();
                            return;
                        }
                        submitWithDate(this.dataset.date);
                    });
                });
            }

            const mealTypeInput = document.getElementById("MealType");
            const mealTypeButtons = document.querySelectorAll('.meal-type-btn');
            const formContainer = document.getElementById('menuForm');

            function updateButtonStyles() {
                const currentMealType = mealTypeInput.value;
                formContainer.dataset.mealTheme = currentMealType === 'Kahvaltı' ? 'morning' : 'evening';
                
                mealTypeButtons.forEach(btn => {
                    btn.classList.remove('btn-primary', 'btn-outline');
                    if (btn.dataset.mealType === currentMealType) {
                        btn.classList.add('btn-primary');
                    } else {
                        btn.classList.add('btn-outline');
                    }
                });
            }

            mealTypeButtons.forEach(button => {
                button.addEventListener('click', function() {
                    mealTypeInput.value = this.dataset.mealType;
                    updateButtonStyles();
                    form.submit();
                });
            });
            
            document.getElementById('CityId').addEventListener('change', function() {
                form.submit();
            });

            // Initial button styles
            updateButtonStyles();
        });
    </script>
}