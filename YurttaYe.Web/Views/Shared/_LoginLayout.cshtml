@using System.Globalization
<!DOCTYPE html>
<html lang="@CultureInfo.CurrentUICulture.Name" x-data="{ 
    darkMode: localStorage.getItem('darkMode') === 'true' || (!localStorage.getItem('darkMode') && window.matchMedia('(prefers-color-scheme: dark)').matches),
    init() {
        this.$watch('darkMode', value => {
            if (value) {
                document.documentElement.classList.add('dark');
            } else {
                document.documentElement.classList.remove('dark');
            }
        });
        // Apply initial theme
        if (this.darkMode) {
            document.documentElement.classList.add('dark');
        }
    }
}" x-bind:class="{ 'dark': darkMode }">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="YurttaYe Yönetim Paneli - Güvenli Giriş" />
    <meta name="author" content="YurttaYe Ekibi" />
    <meta name="robots" content="noindex, nofollow" />

    <title>@ViewData["Title"] - YurttaYe Admin</title>
    
    <!-- Favicon -->
    <link rel="icon" href="~/logo-yurttaye.png" type="image/png" />
    <link rel="apple-touch-icon" href="~/logo-yurttaye.png" />

    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    fontFamily: {
                        'inter': ['Inter', 'sans-serif'],
                        'poppins': ['Poppins', 'sans-serif']
                    }
                }
            }
        }
    </script>
    <!-- Alpine.js for interactivity -->
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.14.1/dist/cdn.min.js" defer></script>
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    
    <!-- Custom Login Styles -->
    <link rel="stylesheet" href="~/css/login.css" />
</head>

<body>
    <!-- Top-right controls -->
    <div class="absolute top-6 right-6 z-50 flex items-center space-x-4">
        <!-- Language Switcher -->
        <div x-data="{ open: false }" class="relative">
            <button x-on:click="open = !open" 
                    class="bg-white/20 dark:bg-gray-800/30 backdrop-blur-md border border-white/30 dark:border-gray-700/50 text-white dark:text-gray-200 p-3 rounded-full transition-all duration-300 hover:scale-110 hover:bg-white/30 dark:hover:bg-gray-700/40" 
                    title="Dil Değiştir">
                <i class="fas fa-globe text-lg"></i>
            </button>
            <div x-show="open" 
                 x-on:click.away="open = false" 
                 x-transition:enter="transition ease-out duration-200"
                 x-transition:enter-start="opacity-0 transform scale-95"
                 x-transition:enter-end="opacity-100 transform scale-100"
                 x-transition:leave="transition ease-in duration-150"
                 x-transition:leave-start="opacity-100 transform scale-100"
                 x-transition:leave-end="opacity-0 transform scale-95"
                 class="absolute right-0 mt-2 w-32 bg-white dark:bg-gray-800 rounded-lg shadow-xl overflow-hidden border border-gray-200 dark:border-gray-700"
                 style="display: none;">
                <a href="@Url.Action("SetLanguage", "Home", new { culture = "tr", returnUrl = Context.Request.Path + Context.Request.QueryString })" class="flex items-center px-4 py-3 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200">
                    <img src="https://flagcdn.com/w20/tr.png" alt="Türkçe" class="w-5 h-5 mr-3 rounded-sm">
                    Türkçe
                </a>
                <a href="@Url.Action("SetLanguage", "Home", new { culture = "en", returnUrl = Context.Request.Path + Context.Request.QueryString })" class="flex items-center px-4 py-3 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200">
                    <img src="https://flagcdn.com/w20/gb.png" alt="English" class="w-5 h-5 mr-3 rounded-sm">
                    English
                </a>
            </div>
        </div>
        
        <!-- Dark Mode Toggle -->
        <button x-on:click="darkMode = !darkMode; localStorage.setItem('darkMode', darkMode.toString())"
                class="bg-white/20 dark:bg-gray-800/30 backdrop-blur-md border border-white/30 dark:border-gray-700/50 text-white dark:text-gray-200 p-3 rounded-full transition-all duration-300 hover:scale-110 hover:bg-white/30 dark:hover:bg-gray-700/40 shadow-lg"
                title="Tema Değiştir"
                type="button">
            <i x-show="!darkMode" class="fas fa-moon text-lg transition-all duration-300"></i>
            <i x-show="darkMode" class="fas fa-sun text-lg transition-all duration-300" x-cloak></i>
        </button>
    </div>

    <!-- Animated Background -->
    <div class="login-bg">
        <!-- Floating Shapes -->
        <div class="shape">
            <i class="fas fa-utensils text-6xl text-white"></i>
        </div>
        <div class="shape">
            <i class="fas fa-cookie-bite text-5xl text-white"></i>
        </div>
        <div class="shape">
            <i class="fas fa-pizza-slice text-4xl text-white"></i>
        </div>

        <!-- Main Content -->
        <main class="relative z-10">
            @RenderBody()
        </main>
    </div>

    <!-- Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script>
        // Simple fallback theme management
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize theme immediately
            const savedTheme = localStorage.getItem('darkMode');
            const systemDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            const shouldBeDark = savedTheme === 'true' || (!savedTheme && systemDark);
            
            if (shouldBeDark) {
                document.documentElement.classList.add('dark');
            } else {
                document.documentElement.classList.remove('dark');
            }

            // Enhanced animations and interactions
            // Smooth scroll behavior
            document.documentElement.style.scrollBehavior = 'smooth';
            
            // Add entrance animation to main content
            const mainContent = document.querySelector('main');
            if (mainContent) {
                mainContent.style.opacity = '0';
                mainContent.style.transform = 'translateY(20px)';
                
                setTimeout(() => {
                    mainContent.style.transition = 'all 0.8s ease-out';
                    mainContent.style.opacity = '1';
                    mainContent.style.transform = 'translateY(0)';
                }, 100);
            }

            // Form validation enhancements
            const inputs = document.querySelectorAll('.login-input');
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.querySelector('label')?.classList.add('text-blue-500');
                });
                
                input.addEventListener('blur', function() {
                    if (!this.value) {
                        this.parentElement.querySelector('label')?.classList.remove('text-blue-500');
                    }
                });
            });

            // Prevent right-click on login page for security
            document.addEventListener('contextmenu', function(e) {
                e.preventDefault();
            });

            // Disable F12 and other dev tools shortcuts for security
            document.addEventListener('keydown', function(e) {
                if (e.key === 'F12' || 
                    (e.ctrlKey && e.shiftKey && e.key === 'I') ||
                    (e.ctrlKey && e.shiftKey && e.key === 'C') ||
                    (e.ctrlKey && e.key === 'u')) {
                    e.preventDefault();
                }
            });

            // Auto-hide alerts after 5 seconds
            setTimeout(() => {
                const alerts = document.querySelectorAll('.login-error, .login-success');
                alerts.forEach(alert => {
                    alert.style.transition = 'opacity 0.5s ease-out';
                    alert.style.opacity = '0';
                    setTimeout(() => alert.remove(), 500);
                });
            }, 5000);
        });

        // ...existing code...
    </script>
    
    <style>
        [x-cloak] { display: none !important; }
    </style>
</body>
</html>
