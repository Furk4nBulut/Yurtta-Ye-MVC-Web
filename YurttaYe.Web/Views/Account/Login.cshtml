@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@model YurttaYe.Core.Models.ViewModels.LoginViewModel
@{
    ViewData["Title"] = localizer["Title"];
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<div class="min-h-screen bg-gradient-to-br from-blue-600 via-blue-700 to-purple-800 dark:from-gray-800 dark:via-gray-900 dark:to-black flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8 relative overflow-hidden transition-colors duration-300">
    <!-- Background Pattern -->
    <div class="absolute inset-0 opacity-10 dark:opacity-5">
        <div class="absolute top-10 left-10 w-32 h-32 bg-white dark:bg-gray-300 rounded-full opacity-20 animate-pulse"></div>
        <div class="absolute top-1/4 right-20 w-24 h-24 bg-white dark:bg-gray-300 rounded-full opacity-15 animate-bounce" style="animation-delay: 0.5s;"></div>
        <div class="absolute bottom-32 left-1/4 w-16 h-16 bg-white dark:bg-gray-300 rounded-full opacity-25 animate-pulse" style="animation-delay: 1s;"></div>
        <div class="absolute bottom-20 right-1/3 w-20 h-20 bg-white dark:bg-gray-300 rounded-full opacity-20 animate-bounce" style="animation-delay: 1.5s;"></div>
    </div>
    
    <div class="max-w-md w-full space-y-8 relative z-10">
        <!-- Logo and Header -->
        <div class="text-center">
            <div class="mx-auto h-24 w-24 bg-white dark:bg-gray-800 rounded-2xl flex items-center justify-center shadow-2xl transform hover:scale-105 transition-transform duration-300 border dark:border-gray-700">
                <div class="text-center">
                    <i class="fas fa-utensils text-3xl text-blue-600 dark:text-blue-400 mb-1"></i>
                    <div class="text-xs font-bold text-gray-700 dark:text-gray-300">YurttaYe</div>
                </div>
            </div>
            <h2 class="mt-6 text-center text-3xl font-extrabold text-white dark:text-gray-100">
                <i class="fas fa-user-shield mr-2"></i>
                @localizer["AdminPanel"]
            </h2>
            <p class="mt-2 text-center text-sm text-blue-100 dark:text-gray-300">
                @localizer["AdminPanelDescription"]
            </p>
        </div>

        <!-- Login Form -->
        <div class="bg-white/95 dark:bg-gray-800/95 backdrop-blur-lg rounded-2xl shadow-2xl p-8 space-y-6 border border-white/20 dark:border-gray-700/50 transition-colors duration-300">
            <form asp-action="Login" asp-controller="Account" method="post" class="space-y-6" x-data="loginForm()">
                @Html.AntiForgeryToken()
                
                <!-- Error Messages -->
                @if (ViewData.ModelState.ErrorCount > 0)
                {
                    <div class="bg-red-50 dark:bg-red-900/30 border-l-4 border-red-400 dark:border-red-500 p-4 rounded-lg">
                        <div class="flex items-center">
                            <div class="flex-shrink-0">
                                <i class="fas fa-exclamation-triangle text-red-400 dark:text-red-300"></i>
                            </div>
                            <div class="ml-3">
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <p class="text-sm text-red-700 dark:text-red-200">@error.ErrorMessage</p>
                                }
                            </div>
                        </div>
                    </div>
                }

                <!-- Success Message -->
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="bg-green-50 dark:bg-green-900/30 border-l-4 border-green-400 dark:border-green-500 p-4 rounded-lg">
                        <div class="flex items-center">
                            <div class="flex-shrink-0">
                                <i class="fas fa-check-circle text-green-400 dark:text-green-300"></i>
                            </div>
                            <div class="ml-3">
                                <p class="text-sm text-green-700 dark:text-green-200">@TempData["SuccessMessage"]</p>
                            </div>
                        </div>
                    </div>
                }

                <!-- Username Field -->
                <div class="space-y-2">
                    <label for="Username" class="block text-sm font-semibold text-gray-700 dark:text-gray-300">
                        <i class="fas fa-user mr-2 text-blue-500 dark:text-blue-400"></i>
                        @localizer["Username"]
                    </label>
                    <div class="relative">
                        <input asp-for="Username" 
                               type="text" 
                               required 
                               class="w-full px-4 py-3 pl-12 pr-4 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 transition-all duration-200 bg-gray-50 dark:bg-gray-700 focus:bg-white dark:focus:bg-gray-600 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400"
                               placeholder="@localizer["UsernamePlaceholder"]"
                               x-model="username"
                               x-on:input="validateUsername()">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <i class="fas fa-user text-gray-400 dark:text-gray-500"></i>
                        </div>
                    </div>
                    <span asp-validation-for="Username" class="text-red-500 dark:text-red-400 text-xs"></span>
                </div>

                <!-- Password Field -->
                <div class="space-y-2" x-data="{ showPassword: false }">
                    <label for="Password" class="block text-sm font-semibold text-gray-700 dark:text-gray-300">
                        <i class="fas fa-lock mr-2 text-blue-500 dark:text-blue-400"></i>
                        @localizer["Password"]
                    </label>
                    <div class="relative">
                        <input asp-for="Password" 
                               x-bind:type="showPassword ? 'text' : 'password'"
                               required 
                               class="w-full px-4 py-3 pl-12 pr-12 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 transition-all duration-200 bg-gray-50 dark:bg-gray-700 focus:bg-white dark:focus:bg-gray-600 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400"
                               placeholder="@localizer["PasswordPlaceholder"]"
                               x-model="password"
                               x-on:input="validatePassword()">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <i class="fas fa-lock text-gray-400 dark:text-gray-500"></i>
                        </div>
                        <button type="button" 
                                class="absolute inset-y-0 right-0 pr-3 flex items-center"
                                x-on:click="showPassword = !showPassword">
                            <i x-show="!showPassword" class="fas fa-eye text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300 transition-colors"></i>
                            <i x-show="showPassword" class="fas fa-eye-slash text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300 transition-colors" style="display: none;"></i>
                        </button>
                    </div>
                    <span asp-validation-for="Password" class="text-red-500 dark:text-red-400 text-xs"></span>
                </div>

                <!-- Remember Me -->
                <div class="flex items-center justify-between">
                    <div class="flex items-center">
                        <input id="remember_me" name="remember_me"
                               type="checkbox" 
                               class="h-4 w-4 text-blue-600 dark:text-blue-400 focus:ring-blue-500 dark:focus:ring-blue-400 border-gray-300 dark:border-gray-600 rounded bg-gray-50 dark:bg-gray-700">
                        <label for="remember_me" class="ml-2 block text-sm text-gray-700 dark:text-gray-300">
                            @localizer["RememberMe"]
                        </label>
                    </div>
                    <div class="text-sm">
                        <a href="#" class="font-medium text-blue-600 dark:text-blue-400 hover:text-blue-500 dark:hover:text-blue-300 transition-colors duration-200">
                            @localizer["ForgotPassword"]
                        </a>
                    </div>
                </div>

                <!-- Submit Button -->
                <div class="space-y-4">
                    <button type="submit" 
                            class="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-gradient-to-r from-blue-600 to-blue-700 dark:from-blue-700 dark:to-blue-800 hover:from-blue-700 hover:to-blue-800 dark:hover:from-blue-600 dark:hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:focus:ring-blue-400 disabled:opacity-50 disabled:cursor-not-allowed transform hover:scale-[1.02] transition-all duration-200 shadow-lg"
                            x-bind:disabled="!isFormValid || isLoading"
                            x-on:click="submitForm()">
                        <span x-show="!isLoading" class="flex items-center">
                            <i class="fas fa-sign-in-alt mr-2"></i>
                            @localizer["LoginButton"]
                        </span>
                        <span x-show="isLoading" class="flex items-center" style="display: none;">
                            <i class="fas fa-spinner animate-spin mr-2"></i>
                            @localizer["LoginInProgress"]
                        </span>
                    </button>

                    <!-- Demo Login Button -->
                    <button type="button" 
                            class="w-full flex justify-center py-3 px-4 border-2 border-dashed border-blue-300 dark:border-blue-600 text-sm font-medium rounded-lg text-blue-700 dark:text-blue-300 bg-blue-50 dark:bg-blue-900/20 hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors duration-200"
                            x-on:click="fillDemoCredentials()">
                        <i class="fas fa-user-cog mr-2"></i>
                        @localizer["DemoLogin"]
                    </button>
                </div>
            </form>
            
            <!-- Quick Info -->
            <div class="mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-800">
                <div class="flex items-start">
                    <div class="flex-shrink-0">
                        <i class="fas fa-info-circle text-blue-400 dark:text-blue-300"></i>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-sm font-medium text-blue-800 dark:text-blue-200">@localizer["AdminPanelFeatures"]</h3>
                        <div class="mt-2 text-sm text-blue-700 dark:text-blue-300">
                            <ul class="list-disc list-inside space-y-1">
                                <li>@localizer["ManageDormMenus"]</li>
                                <li>@localizer["AddCityLocation"]</li>
                                <li>@localizer["BulkDataUpload"]</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        <div class="text-center">
            <p class="text-xs text-blue-100 dark:text-gray-400">
                <i class="fas fa-copyright mr-1"></i>
                @DateTime.Now.Year @localizer["CompanyName"]
            </p>
            <div class="mt-2 flex justify-center space-x-4 text-xs text-blue-200 dark:text-gray-500">
                <a href="#" class="hover:text-white dark:hover:text-gray-300 transition-colors duration-200 flex items-center">
                    <i class="fas fa-shield-alt mr-1"></i>
                    @localizer["Privacy"]
                </a>
                <span>•</span>
                <a href="#" class="hover:text-white dark:hover:text-gray-300 transition-colors duration-200 flex items-center">
                    <i class="fas fa-file-contract mr-1"></i>
                    @localizer["TermsOfUse"]
                </a>
                <span>•</span>
                <a href="#" class="hover:text-white dark:hover:text-gray-300 transition-colors duration-200 flex items-center">
                    <i class="fas fa-life-ring mr-1"></i>
                    @localizer["Support"]
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function loginForm() {
            return {
                username: '',
                password: '',
                isLoading: false,
                usernameValid: false,
                passwordValid: false,
                
                get isFormValid() {
                    return this.usernameValid && this.passwordValid;
                },
                
                validateUsername() {
                    this.usernameValid = this.username.length > 0;
                },
                
                validatePassword() {
                    this.passwordValid = this.password.length >= 6;
                },
                
                fillDemoCredentials() {
                    this.username = 'admin';
                    this.password = 'Admin123!';
                    this.validateUsername();
                    this.validatePassword();
                    
                    // Fill actual form fields
                    document.getElementById('Username').value = this.username;
                    document.getElementById('Password').value = this.password;
                    
                    // Show success message
                    this.showNotification('@localizer["DemoCredentialsLoaded"]', 'success');
                },
                
                submitForm() {
                    if (!this.isFormValid) return;
                    
                    this.isLoading = true;
                    
                    // The form will be submitted naturally
                    setTimeout(() => {
                        if (this.isLoading) {
                            this.isLoading = false;
                        }
                    }, 10000);
                },

                showNotification(message, type) {
                    // Simple notification system
                    const notification = document.createElement('div');
                    notification.className = `fixed top-4 right-4 z-50 max-w-sm p-4 rounded-lg shadow-lg transition-all duration-300 transform translate-x-full`;
                    
                    const bgColor = type === 'success' ? 'bg-green-500' : 'bg-blue-500';
                    notification.classList.add(bgColor);
                    
                    notification.innerHTML = `
                        <div class="flex items-center space-x-2 text-white">
                            <i class="fas fa-${type === 'success' ? 'check' : 'info'}-circle"></i>
                            <p class="text-sm font-medium">${message}</p>
                        </div>
                    `;

                    document.body.appendChild(notification);

                    // Animate in
                    setTimeout(() => {
                        notification.classList.remove('translate-x-full');
                    }, 100);

                    // Auto remove after 3 seconds
                    setTimeout(() => {
                        notification.classList.add('translate-x-full');
                        setTimeout(() => notification.remove(), 300);
                    }, 3000);
                }
            }
        }

        // Additional form enhancements
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-focus on first input
            const firstInput = document.querySelector('input[type="text"]');
            if (firstInput) {
                setTimeout(() => firstInput.focus(), 500);
            }

            // Handle form submission with enter key
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Enter' && e.target.tagName === 'INPUT') {
                    const form = e.target.closest('form');
                    if (form) {
                        const submitBtn = form.querySelector('button[type="submit"]');
                        if (submitBtn && !submitBtn.disabled) {
                            submitBtn.click();
                        }
                    }
                }
            });

            // Shake animation on error
            @if (ViewData.ModelState.ErrorCount > 0)
            {
                <text>
                const loginCard = document.querySelector('.bg-white\\/95');
                loginCard.style.animation = 'shake 0.5s ease-in-out';
                setTimeout(() => {
                    loginCard.style.animation = '';
                }, 500);
                </text>
            }

            // Add floating animation to background elements
            const floatingElements = document.querySelectorAll('[class*="animate-"]');
            floatingElements.forEach((element, index) => {
                element.style.animationDelay = `${index * 0.5}s`;
            });
        });

        // CSS Animations
        const style = document.createElement('style');
        style.textContent = `
            @@keyframes shake {
                0%, 100% { transform: translateX(0); }
                10%, 30%, 50%, 70%, 90% { transform: translateX(-8px); }
                20%, 40%, 60%, 80% { transform: translateX(8px); }
            }
        `;
        document.head.appendChild(style);
    </script>
}
