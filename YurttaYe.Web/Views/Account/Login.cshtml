@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@model YurttaYe.Core.Models.ViewModels.LoginViewModel
@{
    ViewData["Title"] = localizer["Title"];
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<div class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
        <!-- Logo and Header -->
        <div class="text-center">
            <div class="mx-auto h-20 w-20 bg-white rounded-full flex items-center justify-center shadow-lg logo-bounce">
                <img src="~/logo-yurttaye.png" alt="YurttaYe Logo" class="h-16 w-16 object-contain" />
            </div>
            <h2 class="mt-6 text-center text-3xl font-extrabold text-white">
                @localizer["Header"]
            </h2>
            <p class="mt-2 text-center text-sm text-gray-200">
                @localizer["SubHeader"]
            </p>
        </div>

        <!-- Login Form -->
        <div class="login-card rounded-2xl shadow-2xl p-8 space-y-6">
            <form asp-action="Login" asp-controller="Account" method="post" class="space-y-6" x-data="loginForm()">
                @Html.AntiForgeryToken()
                
                <!-- Error Messages -->
                @if (ViewData.ModelState.ErrorCount > 0)
                {
                    <div class="login-error rounded-lg p-4 mb-4">
                        <div class="flex items-center">
                            <i class="fas fa-exclamation-triangle mr-2"></i>
                            <div>
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <p class="text-sm">@error.ErrorMessage</p>
                                }
                            </div>
                        </div>
                    </div>
                }

                <!-- Success Message -->
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="login-success rounded-lg p-4 mb-4">
                        <div class="flex items-center">
                            <i class="fas fa-check-circle mr-2"></i>
                            <p class="text-sm">@TempData["SuccessMessage"]</p>
                        </div>
                    </div>
                }

                <!-- Username Field -->
                <div class="relative">
                    <label for="Username" class="block text-sm font-medium text-login-primary mb-2">
                        <i class="fas fa-user mr-2"></i>
                        @localizer["UsernameLabel"]
                    </label>
                    <input asp-for="Username" 
                           type="text" 
                           required 
                           class="login-input w-full px-4 py-3 pl-12 rounded-lg text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                           placeholder="@localizer["UsernamePlaceholder"]"
                           x-model="username"
                           x-on:input="validateUsername()">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none mt-8">
                        <i class="fas fa-user text-gray-400"></i>
                    </div>
                    <span asp-validation-for="Username" class="text-red-500 text-xs mt-1 block"></span>
                </div>

                <!-- Password Field -->
                <div class="relative" x-data="{ showPassword: false }">
                    <label for="Password" class="block text-sm font-medium text-login-primary mb-2">
                        <i class="fas fa-lock mr-2"></i>
                        @localizer["PasswordLabel"]
                    </label>
                    <input asp-for="Password" 
                           x-bind:type="showPassword ? 'text' : 'password'"
                           required 
                           class="login-input w-full px-4 py-3 pl-12 pr-12 rounded-lg text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                           placeholder="@localizer["PasswordPlaceholder"]"
                           x-model="password"
                           x-on:input="validatePassword()">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none mt-8">
                        <i class="fas fa-lock text-gray-400"></i>
                    </div>
                    <button type="button" 
                            class="absolute inset-y-0 right-0 pr-3 flex items-center mt-8"
                            x-on:click="showPassword = !showPassword">
                        <i x-show="!showPassword" class="fas fa-eye text-gray-400 hover:text-gray-600"></i>
                        <i x-show="showPassword" class="fas fa-eye-slash text-gray-400 hover:text-gray-600" style="display: none;"></i>
                    </button>
                    <span asp-validation-for="Password" class="text-red-500 text-xs mt-1 block"></span>
                </div>

                <!-- Remember Me -->
                <div class="flex items-center justify-between">
                    <div class="flex items-center">
                        <input id="remember_me" name="remember_me"
                               type="checkbox" 
                               class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                        <label for="remember_me" class="ml-2 block text-sm text-login-secondary">
                            @localizer["RememberMe"]
                        </label>
                    </div>
                    <div class="text-sm">
                        <a href="#" class="font-medium text-blue-600 hover:text-blue-500 transition-colors duration-200">
                            @localizer["ForgotPassword"]
                        </a>
                    </div>
                </div>

                <!-- Submit Button -->
                <div>
                    <button type="submit" 
                            class="login-btn group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed"
                            x-bind:disabled="!isFormValid || isLoading"
                            x-on:click="submitForm()">
                        <span x-show="!isLoading" class="flex items-center">
                            <i class="fas fa-sign-in-alt mr-2"></i>
                            @localizer["LoginButton"]
                        </span>
                        <span x-show="isLoading" class="flex items-center" style="display: none;">
                            <i class="fas fa-spinner loading-spinner mr-2"></i>
                            @localizer["LoggingInButton"]
                        </span>
                    </button>
                </div>

                <!-- Divider -->
                <div class="relative">
                    <div class="absolute inset-0 flex items-center">
                        <div class="w-full border-t border-gray-300"></div>
                    </div>
                    <div class="relative flex justify-center text-sm">
                        <span class="px-2 bg-white text-gray-500">@localizer["Or"]</span>
                    </div>
                </div>

                <!-- Demo Login Button -->
                <div>
                    <button type="button" 
                            class="w-full flex justify-center py-3 px-4 border-2 border-dashed border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-gray-50 hover:bg-gray-100 transition-colors duration-200"
                            x-on:click="fillDemoCredentials()">
                        <i class="fas fa-user-cog mr-2"></i>
                        @localizer["DemoLoginButton"]
                    </button>
                </div>
            </form>
        </div>

        <!-- Footer -->
        <div class="text-center">
            <p class="text-xs text-gray-300">
                @localizer["Copyright"]
            </p>
            <div class="mt-2 flex justify-center space-x-4 text-xs text-gray-400">
                <a href="#" class="hover:text-white transition-colors duration-200">@localizer["PrivacyPolicy"]</a>
                <span>•</span>
                <a href="#" class="hover:text-white transition-colors duration-200">@localizer["TermsOfUse"]</a>
                <span>•</span>
                <a href="#" class="hover:text-white transition-colors duration-200">@localizer["Support"]</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function loginForm() {
            return {
                username: '',
                password: '',
                isLoading: false,
                usernameValid: false,
                passwordValid: false,
                
                get isFormValid() {
                    return this.usernameValid && this.passwordValid;
                },
                
                validateUsername() {
                    this.usernameValid = this.username.length > 0;
                },
                
                validatePassword() {
                    this.passwordValid = this.password.length >= 6;
                },
                
                fillDemoCredentials() {
                    this.username = 'admin';
                    this.password = 'Admin123!';
                    this.validateUsername();
                    this.validatePassword();
                    
                    // Fill actual form fields
                    document.getElementById('Username').value = this.username;
                    document.getElementById('Password').value = this.password;
                },
                
                submitForm() {
                    if (!this.isFormValid) return;
                    
                    this.isLoading = true;
                    
                    // The form will be submitted naturally
                    // This is just for UI feedback
                    setTimeout(() => {
                        if (this.isLoading) { // Still loading after 10 seconds
                            this.isLoading = false;
                        }
                    }, 10000);
                }
            }
        }

        // Additional form enhancements
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-focus on first input
            const firstInput = document.querySelector('input[type="text"]');
            if (firstInput) {
                setTimeout(() => firstInput.focus(), 500);
            }

            // Handle form submission with enter key
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Enter' && e.target.tagName === 'INPUT') {
                    const form = e.target.closest('form');
                    if (form) {
                        const submitBtn = form.querySelector('button[type="submit"]');
                        if (submitBtn && !submitBtn.disabled) {
                            submitBtn.click();
                        }
                    }
                }
            });

            // Shake animation on error
            @if (ViewData.ModelState.ErrorCount > 0)
            {
                <text>
                const loginCard = document.querySelector('.login-card');
                loginCard.style.animation = 'shake 0.5s ease-in-out';
                setTimeout(() => {
                    loginCard.style.animation = 'slideInUp 0.8s ease-out';
                }, 500);
                </text>
            }
        });
    </script>
}
