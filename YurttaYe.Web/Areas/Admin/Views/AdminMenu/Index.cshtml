@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model List<YurttaYe.Core.Models.ViewModels.AdminMenuViewModel>

@{
    ViewData["Title"] = "Menü Yönetimi";
    ViewData["BreadcrumbItems"] = new List<dynamic>
    {
        new { Text = "Menü Yönetimi", Icon = "fas fa-utensils", Url = (string)null }
    };
    
    ViewData["PageActions"] = new List<dynamic>
    {
        new { 
            Type = "link", 
            Url = Url.Action("Create"), 
            Text = "Yeni Menü Ekle", 
            Icon = "fas fa-plus",
            Color = "blue-600",
            HoverColor = "blue-700"
        },
        new { 
            Type = "link", 
            Url = Url.Action("Upload"), 
            Text = "Excel'den Yükle", 
            Icon = "fas fa-upload",
            Color = "green-600",
            HoverColor = "green-700"
        },
        new { 
            Type = "dropdown", 
            Text = "İşlemler", 
            Icon = "fas fa-cog",
            Id = "menu-actions-dropdown",
            Items = new List<dynamic>
            {
                new { Text = "Excel'e Aktar", Icon = "fas fa-file-excel", Url = Url.Action("ExportToExcel") },
                new { Text = "Toplu Silme", Icon = "fas fa-trash", Url = "#" },
                new { Text = "Filtreleri Temizle", Icon = "fas fa-filter", Url = Url.Action("Index") }
            }
        }
    };
}

<!-- Success/Error Messages -->
@if (TempData["Success"] != null)
{
    <div class="mb-6 bg-green-50 border border-green-200 rounded-lg p-4 flex items-center">
        <i class="fas fa-check-circle text-green-500 mr-3"></i>
        <span class="text-green-800 font-medium">@TempData["Success"]</span>
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="mb-6 bg-red-50 border border-red-200 rounded-lg p-4 flex items-center">
        <i class="fas fa-exclamation-circle text-red-500 mr-3"></i>
        <span class="text-red-800 font-medium">@TempData["Error"]</span>
    </div>
}

<!-- Advanced Filters -->
<div class="admin-card bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6">
    <div class="flex items-center justify-between mb-4">
        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
            <i class="fas fa-filter text-blue-500 mr-2"></i>
            Filtreler
        </h3>
        <button onclick="toggleFilters()" class="text-gray-500 hover:text-gray-700">
            <i class="fas fa-chevron-down transform transition-transform" id="filter-chevron"></i>
        </button>
    </div>
    
    <form method="get" asp-area="Admin" asp-controller="AdminMenu" asp-action="Index" id="filter-form" class="hidden">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <!-- City Filter -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                    <i class="fas fa-city mr-1"></i>
                    @Localizer["City"]
                </label>
                <select name="cityFilter" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors">
                    <option value="">Tüm Şehirler</option>
                    @if (ViewBag.Cities != null)
                    {
                        @foreach (var city in ViewBag.Cities)
                        {
                            <option value="@city.Value" selected="@(city.Value == ViewBag.CityFilter ? "selected" : null)">@city.Text</option>
                        }
                    }
                </select>
            </div>

            <!-- Meal Type Filter -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                    <i class="fas fa-utensils mr-1"></i>
                    Öğün Türü
                </label>
                <select name="mealTypeFilter" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors">
                    <option value="">Tüm Öğünler</option>
                    <option value="Breakfast" selected="@(ViewBag.MealTypeFilter == "Breakfast" ? "selected" : null)">Kahvaltı</option>
                    <option value="Dinner" selected="@(ViewBag.MealTypeFilter == "Dinner" ? "selected" : null)">Akşam Yemeği</option>
                </select>
            </div>

            <!-- Date Filter -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                    <i class="fas fa-calendar mr-1"></i>
                    Tarih
                </label>
                <input type="date" name="dateFilter" value="@ViewBag.DateFilter" 
                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" />
            </div>

            <!-- Search Filter -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                    <i class="fas fa-search mr-1"></i>
                    Arama
                </label>
                <input type="text" name="searchFilter" value="@ViewBag.SearchFilter" placeholder="Menü öğesi ara..." 
                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" />
            </div>
        </div>

        <div class="flex items-center justify-between mt-4 pt-4 border-t border-gray-200">
            <div class="flex items-center space-x-2">
                <button type="submit" class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                    <i class="fas fa-search mr-2"></i>
                    Filtrele
                </button>
                <a href="@Url.Action("Index")" class="inline-flex items-center px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors">
                    <i class="fas fa-times mr-2"></i>
                    Temizle
                </a>
            </div>
            <div class="text-sm text-gray-500">
                <i class="fas fa-info-circle mr-1"></i>
                Toplam <span class="font-semibold">@Model.Count</span> menü bulundu
            </div>
        </div>
    </form>
</div>

<!-- Statistics Cards -->
<div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4 mb-6">
    <div class="admin-card bg-gradient-to-r from-blue-500 to-blue-600 rounded-lg p-4 text-white">
        <div class="flex items-center">
            <i class="fas fa-utensils text-2xl mr-3"></i>
            <div>
                <p class="text-blue-100 text-sm">Toplam Menü</p>
                <p class="text-2xl font-bold">@Model.Count</p>
            </div>
        </div>
    </div>

    <div class="admin-card bg-gradient-to-r from-green-500 to-green-600 rounded-lg p-4 text-white">
        <div class="flex items-center">
            <i class="fas fa-calendar-day text-2xl mr-3"></i>
            <div>
                <p class="text-green-100 text-sm">Bu Ay</p>
                <p class="text-2xl font-bold">@Model.Count(m => m.Date.Month == DateTime.Now.Month)</p>
            </div>
        </div>
    </div>

    <div class="admin-card bg-gradient-to-r from-purple-500 to-purple-600 rounded-lg p-4 text-white">
        <div class="flex items-center">
            <i class="fas fa-coffee text-2xl mr-3"></i>
            <div>
                <p class="text-purple-100 text-sm">Kahvaltı</p>
                <p class="text-2xl font-bold">@Model.Count(m => m.MealType == "Breakfast")</p>
            </div>
        </div>
    </div>

    <div class="admin-card bg-gradient-to-r from-orange-500 to-orange-600 rounded-lg p-4 text-white">
        <div class="flex items-center">
            <i class="fas fa-moon text-2xl mr-3"></i>
            <div>
                <p class="text-orange-100 text-sm">Akşam</p>
                <p class="text-2xl font-bold">@Model.Count(m => m.MealType == "Dinner")</p>
            </div>
        </div>
    </div>
</div>

<!-- Menus Table -->
<div class="admin-card bg-white rounded-xl shadow-sm border border-gray-200">
    <div class="p-6 border-b border-gray-200">
        <div class="flex items-center justify-between">
            <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                <i class="fas fa-list text-blue-500 mr-2"></i>
                Menü Listesi
            </h3>
            <div class="flex items-center space-x-2">
                <button onclick="selectAll()" class="text-sm text-gray-600 hover:text-gray-800">
                    <i class="fas fa-check-square mr-1"></i>
                    Tümünü Seç
                </button>
                <button onclick="deleteSelected()" class="text-sm text-red-600 hover:text-red-800 disabled:opacity-50" disabled id="delete-selected-btn">
                    <i class="fas fa-trash mr-1"></i>
                    Seçilenleri Sil
                </button>
            </div>
        </div>
    </div>

    @if (Model.Any())
    {
        <div class="overflow-x-auto">
            <table class="w-full">
                <thead class="bg-gray-50 border-b border-gray-200">
                    <tr>
                        <th class="w-8 px-6 py-3">
                            <input type="checkbox" id="select-all" class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            <button onclick="sortTable('city')" class="flex items-center hover:text-gray-700">
                                Şehir
                                <i class="fas fa-sort ml-1"></i>
                            </button>
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            <button onclick="sortTable('mealType')" class="flex items-center hover:text-gray-700">
                                Öğün Türü
                                <i class="fas fa-sort ml-1"></i>
                            </button>
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            <button onclick="sortTable('date')" class="flex items-center hover:text-gray-700">
                                Tarih
                                <i class="fas fa-sort ml-1"></i>
                            </button>
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Enerji</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Öğe Sayısı</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Durum</th>
                        <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">İşlemler</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200" id="menu-table-body">
                    @foreach (var menu in Model)
                    {
                        <tr class="hover:bg-gray-50 transition-colors" data-menu-id="@menu.Id">
                            <td class="px-6 py-4">
                                <input type="checkbox" class="menu-checkbox rounded border-gray-300 text-blue-600 focus:ring-blue-500" value="@menu.Id">
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <i class="fas fa-map-marker-alt text-gray-400 mr-2"></i>
                                    <span class="text-sm font-medium text-gray-900">@menu.CityName</span>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="inline-flex px-3 py-1 text-xs font-semibold rounded-full 
                                      @(menu.MealType == "Breakfast" ? "bg-yellow-100 text-yellow-800" : "bg-blue-100 text-blue-800")">
                                    <i class="fas @(menu.MealType == "Breakfast" ? "fa-coffee" : "fa-moon") mr-1"></i>
                                    @(menu.MealType == "Breakfast" ? "Kahvaltı" : "Akşam")
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <div class="flex items-center">
                                    <i class="fas fa-calendar text-gray-400 mr-2"></i>
                                    @menu.Date.ToString("dd.MM.yyyy")
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                <div class="flex items-center">
                                    <i class="fas fa-fire text-orange-400 mr-1"></i>
                                    @menu.Energy
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs bg-gray-100 text-gray-800">
                                    <i class="fas fa-list mr-1"></i>
                                    @menu.Items.Count öğe
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="inline-flex items-center px-2 py-1 text-xs font-semibold rounded-full 
                                      @(menu.Date >= DateTime.Today ? "bg-green-100 text-green-800" : "bg-gray-100 text-gray-800")">
                                    <i class="fas @(menu.Date >= DateTime.Today ? "fa-check" : "fa-clock") mr-1"></i>
                                    @(menu.Date >= DateTime.Today ? "Aktif" : "Geçmiş")
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                <div class="flex items-center justify-end space-x-2">
                                    <button onclick="showMenuDetails(@menu.Id)" 
                                            class="nav-link text-blue-600 hover:text-blue-900 p-2 rounded-lg hover:bg-blue-50 transition-colors"
                                            data-tooltip="Detayları Görüntüle">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <a asp-area="Admin" asp-controller="AdminMenu" asp-action="Edit" asp-route-id="@menu.Id" 
                                       class="nav-link text-green-600 hover:text-green-900 p-2 rounded-lg hover:bg-green-50 transition-colors"
                                       data-tooltip="Düzenle">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button onclick="deleteMenu(@menu.Id, '@menu.CityName - @menu.MealType')" 
                                            class="text-red-600 hover:text-red-900 p-2 rounded-lg hover:bg-red-50 transition-colors"
                                            data-tooltip="Sil">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="p-12 text-center">
            <i class="fas fa-utensils text-6xl text-gray-300 mb-4"></i>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Menü bulunamadı</h3>
            <p class="text-gray-500 mb-6">Henüz herhangi bir menü eklenmemiş veya filtrelere uygun menü yok.</p>
            <div class="flex items-center justify-center space-x-3">
                <a asp-area="Admin" asp-controller="AdminMenu" asp-action="Create" 
                   class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                    <i class="fas fa-plus mr-2"></i>
                    İlk Menüyü Ekle
                </a>
                <a asp-area="Admin" asp-controller="AdminMenu" asp-action="Upload" 
                   class="inline-flex items-center px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors">
                    <i class="fas fa-upload mr-2"></i>
                    Excel'den Yükle
                </a>
            </div>
        </div>
    }
</div>

<!-- Menu Details Modal -->
<div id="menu-details-modal" class="fixed inset-0 z-50 hidden overflow-y-auto">
    <div class="flex items-center justify-center min-h-screen px-4">
        <div class="fixed inset-0 bg-black opacity-50"></div>
        <div class="relative bg-white rounded-lg max-w-2xl w-full p-6">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-semibold">Menü Detayları</h3>
                <button onclick="closeMenuDetails()" class="text-gray-400 hover:text-gray-600">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div id="menu-details-content">
                <!-- Content will be loaded here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let selectedMenus = [];

        function toggleFilters() {
            const form = document.getElementById('filter-form');
            const chevron = document.getElementById('filter-chevron');
            
            form.classList.toggle('hidden');
            chevron.classList.toggle('rotate-180');
        }

        function selectAll() {
            const selectAllCheckbox = document.getElementById('select-all');
            const menuCheckboxes = document.querySelectorAll('.menu-checkbox');
            
            selectAllCheckbox.checked = !selectAllCheckbox.checked;
            menuCheckboxes.forEach(checkbox => {
                checkbox.checked = selectAllCheckbox.checked;
            });
            
            updateSelectedMenus();
        }

        function updateSelectedMenus() {
            const checkboxes = document.querySelectorAll('.menu-checkbox:checked');
            selectedMenus = Array.from(checkboxes).map(cb => cb.value);
            
            const deleteBtn = document.getElementById('delete-selected-btn');
            deleteBtn.disabled = selectedMenus.length === 0;
        }

        function deleteSelected() {
            if (selectedMenus.length === 0) return;
            
            if (confirmAdminDelete(`${selectedMenus.length} menüyü silmek istediğinizden emin misiniz?`)) {
                // Implement bulk delete logic
                showAdminNotification(`${selectedMenus.length} menü siliniyor...`, 'info');
                // Add AJAX call here for bulk delete
            }
        }

        function deleteMenu(id, name) {
            if (confirmAdminDelete(`"${name}" menüsünü silmek istediğinizden emin misiniz?`)) {
                fetch(`/Admin/AdminMenu/Delete/${id}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    }
                })
                .then(response => {
                    if (response.ok) {
                        showAdminNotification('Menü başarıyla silindi!', 'success');
                        document.querySelector(`[data-menu-id="${id}"]`).remove();
                    } else {
                        showAdminNotification('Menü silinirken hata oluştu!', 'error');
                    }
                })
                .catch(error => {
                    showAdminNotification('Menü silinirken hata oluştu!', 'error');
                });
            }
        }

        function showMenuDetails(id) {
            const modal = document.getElementById('menu-details-modal');
            const content = document.getElementById('menu-details-content');
            
            content.innerHTML = '<div class="text-center py-4"><i class="fas fa-spinner fa-spin text-2xl text-gray-400"></i></div>';
            modal.classList.remove('hidden');
            
            // Load menu details via AJAX
            fetch(`/Admin/AdminMenu/Details/${id}`)
                .then(response => response.text())
                .then(html => {
                    content.innerHTML = html;
                })
                .catch(error => {
                    content.innerHTML = '<div class="text-center py-4 text-red-500">Detaylar yüklenirken hata oluştu.</div>';
                });
        }

        function closeMenuDetails() {
            document.getElementById('menu-details-modal').classList.add('hidden');
        }

        function sortTable(column) {
            // Implement table sorting logic
            showAdminNotification(`${column} sütununa göre sıralanıyor...`, 'info');
        }

        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-open filters if any filter is applied
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.toString()) {
                toggleFilters();
            }

            // Setup checkbox event listeners
            document.querySelectorAll('.menu-checkbox').forEach(checkbox => {
                checkbox.addEventListener('change', updateSelectedMenus);
            });

            // Close modal when clicking outside
            document.getElementById('menu-details-modal').addEventListener('click', function(e) {
                if (e.target === this) {
                    closeMenuDetails();
                }
            });
        });
    </script>
}
